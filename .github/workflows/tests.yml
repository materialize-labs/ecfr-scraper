name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests with unittest
      run: |
        python -m unittest discover -s tests -p "test_*.py" -v
    
    - name: Run tests with pytest (if available)
      run: |
        python -m pytest tests/ -v --tb=short
      continue-on-error: true
    
    - name: Test CLI commands
      run: |
        # Test basic CLI functionality
        python -m src.main --help
        python -m src.main init-db --force
        python -m src.main stats
        python -m src.main search "test" || true  # Allow to fail on empty DB
      env:
        ECFR_DB_PATH: ./test_ci.db
        ECFR_DATA_DIR: ./test_data

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Treat all other issues as warnings
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true
    
    - name: Check code formatting with black
      run: |
        black --check --diff src/ tests/
      continue-on-error: true
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff src/ tests/
      continue-on-error: true

  integration:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run integration tests
      run: |
        python test_scraper.py
      env:
        ECFR_DB_PATH: ./integration_test.db
        ECFR_DATA_DIR: ./integration_data
    
    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          *.db
          logs/
          test_data/
        retention-days: 7